MACRO ASSEMBLER W_COMP_IN                                   11/19/18 10:41:55 PAGE     1


WIN32 MACRO ASSEMBLER MA51 V06.04.19OBJECT MODULE PLACED IN C:\USERS\DUBOC_AU\DESKTOP\TP2\W_COMP_IN.OBJ
ASSEMBLER INVOKED BY: MA51.EXE C:\USERS\DUBOC_AU\DESKTOP\TP2\W_COMP_IN.A51 OJ(C:\USERS\DUBOC_AU\DESKTOP\TP2\W_COMP_IN.OBJ) PIN(C:\RIDE\INC;C:\RIDE\INC\51) PIN(C:\RIDE\INC\51\) EP LINES SYNTAX(ASM51) MOD51 PR(C:\USERS\DUBOC_AU\DESKTOP\TP2\W_COMP_IN.LST) XR DB PW(80) RB(0) 

LOC     OBJ           LINE    SOURCE
                         1       ;En-tête
                         2     
                         3     ;Déclaration des  variables 
  007F                   4     W1_L 		DATA 		7FH			
  007E                   5     W1_H		DATA		7EH
  007D                   6     W2_L 		DATA		7DH			
  007C                   7     W2_H		DATA		7CH
  00B7                   8     SUP		BIT		P3.7
  00B6                   9     INF		BIT		P3.6	
  0003                  10     MASK		DATA		03H
                        11     
                        12     ;Table des vecteurs
  0000                  13     			ORG		0000H
0000    802E            14     			SJMP		DEBUT
  0030                  15     			ORG		0030H
                        16     			
                        17     
                        18     DEBUT: 	
0030    758130          19     			MOV		SP,#30H				;On deplace le SP en 0030h
                        20     			
                        21     BOUCLE: 
0033    E590            22     			MOV		A,P1					;On met P1 dans A pour faciliter les permutations circulaires 
0035    757D03          23     			MOV      W2_L,#MASK			;On fait un ET entre P1 et le masque qui nous donne W2_L
0038    527D            24     			ANL		W2_L,A
                        25     			
003A    03              26     			RR			A						;Double rotation a droite
003B    03              27     			RR			A
003C    757C03          28     			MOV		W2_H,#MASK			;On fait un ET entre P1 et le masque qui nous donne W1_H
003F    527C            29     			ANL		W2_H,A		
                        30     			
0041    C4              31     			SWAP		A						;On fait un swap de A
0042    757E03          32     			MOV		W1_H,#MASK			;On fait un ET entre P1 et le masque qui nous donne W1_L
0045    527E            33     			ANL		W1_H,A
                        34     			
0047    23              35     			RL			A						;On fait une rotation de la gauche vers la droite de l'entree
0048    23              36     			RL			A
0049    757F03          37     			MOV		W1_L,#MASK			;On fait un ET entre P1 et le masque qui nous donne W2_H
004C    527F            38     			ANL		W1_L,A
                        39     			
                        40     					
                        41     			
                        42     			
004E    A87E            43     			MOV		R0,W1_H				;On compare W1 et W2, meme programme que W_Comp_Rt
0050    A97C            44     			MOV		R1,W2_H
0052    120065          45     			LCALL		ROUTINE
0055    7007            46     SI:   		JNZ		FSI					; Si C=1 jump à finsi
0057    A87F            47     			MOV		R0,W1_L				; Si C=0
0059    A97D            48     			MOV		R1,W2_L
005B    120065          49     			LCALL		ROUTINE	
                        50     FSI: 											
005E    92B7            51     			MOV		SUP,C					; SUP prend la valeur de la carry (1 si c'est supérieur ou égal)
0060    B3              52     			CPL 		C						; on affecte inv(SUP) à INF (condition <)
0061    92B6            53     			MOV 		INF, C
                        54     			
0063    80CE            55     FIN: 		SJMP		BOUCLE
                        56     			 	
                        57     ROUTINE: 			
0065    E8              58     			MOV		A,R0
0066    C3              59     			CLR		C
0067    99              60     			SUBB 		A,R1
0068    22              61     			RET
                        62     
                        63     			END
MACRO ASSEMBLER W_COMP_IN                                   11/19/18 10:41:55 PAGE     0


SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES             REFERENCES

P1 . . . . . . . .  D ADDR   0090H   A                          22 
FSI. . . . . . . .  C ADDR   005EH   A                          46 50# 
P3 . . . . . . . .  D ADDR   00B0H   A                          8 9 
SP . . . . . . . .  D ADDR   0081H   A                          19 
ROUTINE. . . . . .  C ADDR   0065H   A                          45 49 57# 
MASK . . . . . . .  D ADDR   0003H   A                          10# 23 28 32 37 
W1_H . . . . . . .  D ADDR   007EH   A                          5# 32 33 43 
W2_H . . . . . . .  D ADDR   007CH   A                          7# 28 29 44 
W1_L . . . . . . .  D ADDR   007FH   A                          4# 37 38 47 
DEBUT. . . . . . .  C ADDR   0030H   A                          14 18# 
W2_L . . . . . . .  D ADDR   007DH   A                          6# 23 24 48 
SUP. . . . . . . .  B ADDR   00B0H.7 A                          8# 51 
BOUCLE . . . . . .  C ADDR   0033H   A                          21# 55 
SI . . . . . . . .  C ADDR   0055H   A                          46# 
FIN. . . . . . . .  C ADDR   0063H   A                          55# 
INF. . . . . . . .  B ADDR   00B0H.6 A                          9# 53 



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     59    ----
   XDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


REGISTER BANK(S) USED : 0 

ASSEMBLY COMPLETE.   0 WARNING(S)   0 ERROR(S)
